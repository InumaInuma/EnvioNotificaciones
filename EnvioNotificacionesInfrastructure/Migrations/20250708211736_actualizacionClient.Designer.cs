// <auto-generated />
using System;
using EnvioNotificacionesInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnvioNotificacionesInfrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250708211736_actualizacionClient")]
    partial class actualizacionClient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnvioNotificacionesDomian.Entities.Cliente", b =>
                {
                    b.Property<int>("CodCli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodCli");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCli"));

                    b.Property<string>("NomEmp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NomEmp");

                    b.HasKey("CodCli");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("EnvioNotificacionesDomian.Entities.LoginUsuario", b =>
                {
                    b.Property<int>("LogUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogUId"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("LoginUsuario");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LogUId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("LoginUsuarios");
                });

            modelBuilder.Entity("EnvioNotificacionesInfrastructure.EnvioNotificacionesDomian.Entities.Cita", b =>
                {
                    b.Property<int>("CodCit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCit"));

                    b.Property<string>("ApeMat")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ApePat")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<int?>("AreTra")
                        .HasColumnType("int");

                    b.Property<string>("AudCon")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AudCre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AudMod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Campania")
                        .HasColumnType("bit");

                    b.Property<string>("CenCos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodCli")
                        .HasColumnType("int");

                    b.Property<int?>("CodCpa")
                        .HasColumnType("int")
                        .HasColumnName("CodCPa");

                    b.Property<int?>("CodDes")
                        .HasColumnType("int");

                    b.Property<int?>("CodEmp")
                        .HasColumnType("int");

                    b.Property<int?>("CodFic")
                        .HasColumnType("int");

                    b.Property<int?>("CodHor")
                        .HasColumnType("int");

                    b.Property<int?>("CodOri")
                        .HasColumnType("int");

                    b.Property<int?>("CodSed")
                        .HasColumnType("int");

                    b.Property<int>("CodTch")
                        .HasColumnType("int")
                        .HasColumnName("CodTCh");

                    b.Property<int?>("CodTcl")
                        .HasColumnType("int")
                        .HasColumnName("CodTCl");

                    b.Property<int?>("CodTdo")
                        .HasColumnType("int")
                        .HasColumnName("CodTDo");

                    b.Property<int?>("CodTex")
                        .HasColumnType("int")
                        .HasColumnName("CodTEx");

                    b.Property<string>("CorElec")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DesDir")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("EdaPac")
                        .HasColumnType("int");

                    b.Property<bool?>("EmoAnt")
                        .HasColumnType("bit");

                    b.Property<bool?>("EmoCov")
                        .HasColumnType("bit");

                    b.Property<bool?>("EmoEclia")
                        .HasColumnType("bit");

                    b.Property<bool?>("EmoElisa")
                        .HasColumnType("bit");

                    b.Property<bool?>("EmoMol")
                        .HasColumnType("bit");

                    b.Property<string>("ExaAdi")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FactuA")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FecCit")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FecEWa")
                        .HasColumnType("datetime")
                        .HasColumnName("FecEWa");

                    b.Property<DateTime?>("FecEnv24")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FecEnv48")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FecNac")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FecNas")
                        .HasColumnType("datetime")
                        .HasColumnName("FecNAs");

                    b.Property<DateTime?>("FecRWa")
                        .HasColumnType("datetime")
                        .HasColumnName("FecRWa");

                    b.Property<DateTime?>("FecReg")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FecTic")
                        .HasColumnType("datetime");

                    b.Property<bool?>("FlagCpac")
                        .HasColumnType("bit")
                        .HasColumnName("FlagCPac");

                    b.Property<string>("Gerenc")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool?>("InHouse")
                        .HasColumnType("bit");

                    b.Property<int?>("IndAas")
                        .HasColumnType("int")
                        .HasColumnName("IndAAs");

                    b.Property<bool?>("IndCon")
                        .HasColumnType("bit");

                    b.Property<bool?>("IndEWa")
                        .HasColumnType("bit")
                        .HasColumnName("IndEWa");

                    b.Property<bool?>("IndEcm")
                        .HasColumnType("bit")
                        .HasColumnName("IndECM");

                    b.Property<int?>("IndEnv")
                        .HasColumnType("int");

                    b.Property<bool?>("IndEnv24")
                        .HasColumnType("bit");

                    b.Property<bool?>("IndEnv48")
                        .HasColumnType("bit");

                    b.Property<bool?>("IndRWa")
                        .HasColumnType("bit")
                        .HasColumnName("IndRWa");

                    b.Property<bool?>("IndReg")
                        .HasColumnType("bit");

                    b.Property<string>("MsjERW")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("MsjERW");

                    b.Property<string>("MsjErrW")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("NoAsis")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NroCel")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("NroCpa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NroCPa");

                    b.Property<int>("NroInt")
                        .HasColumnType("int");

                    b.Property<string>("NroReq")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NroTlf")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("NumDid")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("NumDId");

                    b.Property<int?>("NumOrd")
                        .HasColumnType("int");

                    b.Property<int?>("NumTic")
                        .HasColumnType("int");

                    b.Property<string>("Observ")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("PruAnt")
                        .HasColumnType("bit");

                    b.Property<bool?>("PruCov")
                        .HasColumnType("bit");

                    b.Property<bool?>("PruEclia")
                        .HasColumnType("bit");

                    b.Property<bool?>("PruElisa")
                        .HasColumnType("bit");

                    b.Property<bool?>("PruMol")
                        .HasColumnType("bit");

                    b.Property<string>("PueAct")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RefCodCli")
                        .HasColumnType("int");

                    b.Property<string>("Responsable")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SexPac")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("SubCon")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TipPag")
                        .HasColumnType("int");

                    b.Property<int?>("TipoCarga")
                        .HasColumnType("int");

                    b.Property<string>("ZonLab")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodCit");

                    b.HasIndex("CodCli");

                    b.HasIndex("CodTch");

                    b.ToTable("Cita");
                });

            modelBuilder.Entity("EnvioNotificacionesInfrastructure.EnvioNotificacionesDomian.Entities.TipoChequeo", b =>
                {
                    b.Property<int>("CodTCh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTCh"));

                    b.Property<string>("DesTCh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CodTCh");

                    b.ToTable("TipoChequeo");
                });

            modelBuilder.Entity("EnvioNotificacionesInfrastructure.EnvioNotificacionesDomian.Entities.Cita", b =>
                {
                    b.HasOne("EnvioNotificacionesDomian.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("CodCli")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Cita_Cliente");

                    b.HasOne("EnvioNotificacionesInfrastructure.EnvioNotificacionesDomian.Entities.TipoChequeo", "TipoChequeo")
                        .WithMany()
                        .HasForeignKey("CodTch")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK__Cita_TipoChequeo");

                    b.Navigation("Cliente");

                    b.Navigation("TipoChequeo");
                });
#pragma warning restore 612, 618
        }
    }
}
